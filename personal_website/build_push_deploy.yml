---

resource_types:
  - name: mattermost-webhook
    type: docker-image
    source:
      repository: arbourd/concourse-slack-alert-resource

resources:
  # Repo to pull for building image
  - name: personal-website-post-update
    type: git
    icon: github
    source:
      uri: https://github.com/FlipEnergy/personal-website.git
      branch: master
      paths:
        - flipenergy

  - name: personal-website-version-update
    type: git
    icon: github
    source:
      uri: https://github.com/FlipEnergy/personal-website.git
      branch: master
      paths:
        - version

  - name: concourse-pipelines-repo
    type: git
    icon: github
    source:
      uri: https://github.com/FlipEnergy/concourse-pipelines.git
      branch: master

  # Where we will push the image to
  - name: docker-hub-repo-latest
    type: registry-image
    icon: docker
    source:
      repository: flipenergy/flipenergy
      username: ((docker_hub_username))
      password: ((docker_hub_password))
      tag: latest

  - name: docker-hub-repo-stable
    type: registry-image
    icon: docker
    source:
      repository: flipenergy/flipenergy
      username: ((docker_hub_username))
      password: ((docker_hub_password))
      tag: stable

  - name: notify-mattermost
    type: mattermost-webhook
    source:
      url: ((mattermost_webhook_url))

## Latest image build and push jobs
jobs:
  - name: build-and-push-latest-image
    serial: true
    plan:
      - get: personal-website-post-update
        trigger: true

      - task: build-image
        privileged: true
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: vito/oci-build-task

          inputs:
            - name: personal-website-post-update

          outputs:
            - name: image

          params:
            CONTEXT: personal-website-post-update
          run:
            path: build

      - put: docker-hub-repo-latest
        params:
          image: image/image.tar

## Release image build and push job
  - name: build-and-push-release-image
    serial: true
    plan:
      - get: personal-website-version-update
        trigger: true

      - task: build-image
        privileged: true
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: vito/oci-build-task

          inputs:
            - name: personal-website-version-update

          outputs:
            - name: image

          params:
            CONTEXT: personal-website-version-update
          run:
            path: build

      - put: docker-hub-repo-stable
        params:
          image: image/image.tar
          additional_tags: personal-website-version-update/version

  - name: deploy-to-k8s
    serial: true
    plan:
      - get: personal-website-version-update
      - get: docker-hub-repo-stable
        trigger: true
        passed: [build-and-push-release-image]
      - get: concourse-pipelines-repo

      - task: get-secret-key
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: frealmyr/bitwarden-cli-docker

          inputs:
            - name: concourse-pipelines-repo

          outputs:
            - name: concourse-pipelines-repo

          params:
            BW_ITEM: ((bitwarden_item))
            BW_SERVER: ((bitwarden_server))
            BW_USERNAME: ((bitwarden_username))
            BW_PASSWORD: ((bitwarden_password))

          run:
            path: ./get_secret_key.sh
            dir: concourse-pipelines-repo/common

      - task: deploy-to-k8s
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: praqma/helmsman

          inputs:
            - name: personal-website-version-update
            - name: concourse-pipelines-repo

          run:
            path: concourse-pipelines-repo/personal_website/deploy_to_k8s.sh

    on_success:
      put: notify-mattermost
      params:
        alert_type: success

    on_failure:
      put: notify-mattermost
      params:
        alert_type: failed
